class Node:
    def __init__(self,data):
        self.data = data
        self.left = None
        self.right = None
class Tree:
    def __init__(self):
        self.root = None
    def Search(self,data):
        current = self.root
        while current.data is not data:
            if data > current.data:
                current = current.right
            else:
                current = current.left
            if current is None:
                return None
        return current
    def Insert(self,data):
        NewNode = Node(data)
        if self.root is None:
            self.root = NewNode
        else:
            current = self.root
            while True:
                parent = current
                if data > current.data:
                    current = current.right
                    if current is None:
                        parent.right = NewNode
                        return
                else:
                    current = current.left
                    if current is None:
                        parent.left = NewNode
                        return
    def Display(self):
        self.InOrder(self.root)
    def Delete(self,target):
        '''1. target has no children
           2. target has 1 child
           3. target has 2 children'''
        current = self.root
        while current.data is not target:
            if target > current.data:
                current = current.right
            else:
                current = current.left
            if current is None:
                return None
        '''target has no children'''
        if target.left is None and target.right is None:
            if target is self.root:
                self.root = None
            else:
                if current is parent.right:
                    parent.right = None
                else:
                    parent.left = None
    def InOrder(self,root):
        if root is None:
            return
        else:
            self.InOrder(root.left)
            print(root.data, end = ' ')
            self.InOrder(root.right)
t = Tree()
t.Insert(4)
t.Insert(1)
t.Insert(50)
t.Display()
s = t.Search(500)
if s is None:
    print('element not found')
else:
    print('found')