'''
Created on Oct 29, 2016

@author: s528358
'''
class BasicHashing:
    def __init__(self):
        self.size = 12
        self.slots = [None]*self.size
    def hashFunction(self,key,size):
        return key%size
    def Insert(self,key):
        hashValue = self.hashFunction(key,self.size)
#         print(hashValue)
        while self.slots[hashValue] is not None and self.slots[hashValue] is not 'Del':
            hashValue = hashValue + 1
            hashValue = hashValue % self.size
        self.slots[hashValue] = key
    def Search(self,key):
        hashValue = self.hashFunction(key, self.size)
        while self.slots[hashValue] is not None:
            if self.slots[hashValue] == key:
                return "item found"
            else:
                hashValue = hashValue + 1
                hashValue = hashValue % self.size
        return "Not Found"
    def Display(self):
        for i in range(self.size):
            if self.slots[i] is not None:
                print(self.slots[i], end = ' ')
            else:
                print(" ",end = ' ')
    def Delete(self,key):
        '''before deleting search the key'''
        
h = BasicHashing()
h.Insert(108)
h.Insert(13)
h.Insert(0)
h.Insert(113)
h.Insert(5)
h.Insert(6)
h.Insert(117)
h.Insert(47)
h.Display()
print("\n",h.Search(113))